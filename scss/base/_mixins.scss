// ----------------------------------------------------------------------------------------------------
// # Mixin
// # Sass 에서 자주 사용되는 믹스인 정의(추후 각 카테고리별로 분류 할 예정)
// ----------------------------------------------------------------------------------------------------

// ----------------------------------------------------------------------------------------------------
// Set width for percentage
// usage : @include set-width(300px) = [ 300px / design-draft * 100% ]
// ----------------------------------------------------------------------------------------------------
@mixin set-width($width, $wrap-width : $design-width){ 
	width: ($width / $wrap-width) * 100%;
}

// ----------------------------------------------------------------------------------------------------
// Opacity
// usage : @include opacity(0.7)
// ----------------------------------------------------------------------------------------------------

@mixin opacity($opacity) {
  -webkit-opacity:$opacity;
  -moz-opacity:$opacity;
  -khtml-opacity:$opacity;
  opacity: $opacity;

  $opacity-ie: $opacity * 100;
  //-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=$opacity-ie)";
  filter: alpha(opacity=$opacity-ie); //IE8
}

// ----------------------------------------------------------------------------------------------------
// FullPage Layout
// usage : @include fully-layout($type)
// ----------------------------------------------------------------------------------------------------

@mixin fully-layout($type) {
  position: $type;
  top:0;right:0;bottom:0;left:0;
}

// ----------------------------------------------------------------------------------------------------
// FullPage Layout
// usage : @include calc-percent($value)
// ----------------------------------------------------------------------------------------------------
@function calc-percent($value, $design-width){
  @return ($value / $design-width) * 100%;
}
@function getPercent($value, $design-width){
  @return ($value / $design-width) * 100%;
}

//
// Get REM
//
@function rem($target) {
    @return ($target / $root-em) * 1rem;
}

//
// 각 페이지별 백그라운드 이미지
//
//
@mixin page-background($url){
  background:transparent url($url) no-repeat top center;
}


// ----------------------------------------------------------------------------------------------------
// 커스텀 체크박스 (mixin)
// usage : @include custom-checkbox($path, width, height)
// ----------------------------------------------------------------------------------------------------

@mixin hide-checkbox{
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

@mixin checkbox($url, $width, $height){
  padding-left: $width;
  height: $height;
  display: inline-block;
  background-image:url($url);
  background-repeat: no-repeat;
  background-position: 0 0;
  cursor: pointer;
  &.checked{
    background-position:0 (-$height);
  }
  &.disabled{
    background-position:0 (-$height*2);
  }
}

@mixin checkbox-responsive($url, $width, $ratio : 100%){

  display: block;
  font-size:0;
  line-height:1;

  & > i,
  & > img{
    display:inline-block;
  }

  & > i{
    width : $width;
    background:transparent url($url) no-repeat;
    background-position:0 0;
    background-size:100%;
    cursor:pointer;
  }
  
  & > i:after{
      padding-bottom:$ratio;
      content:'';
      display:block;
  }

  &.checked > i{
    background-position:0 100%;    
  }

}

// ----------------------------------------------------------------------------------------------------
// 웹 접근성 (글씨 숨기기)
// usage : @include hide-text
// ----------------------------------------------------------------------------------------------------
@mixin hide-text{
    overflow:hidden;
    text-indent:-9000px;
    display:block;
}

//----------------------------------------------------------------------------------------------------
// 네비게이션
// usage : @include nav-list(3);
//----------------------------------------------------------------------------------------------------
@mixin nav-list($elem_cnt) {
    list-style-type:none;
    padding:0;margin:0;
    overflow:hidden;
    > li{
        display:block;
        float:left;
        width: 100% / $elem_cnt;
        &:last-child{
            margin-right:0px;
        }
    }
}
// ----------------------------------------------------------------------------------------------------
// 클리어픽스
// usage : @include 
// ----------------------------------------------------------------------------------------------------
@mixin clearfix {
  *zoom: 1;

  &:before,
  &:after {
    content: "";
    display: table;
  }

  &:after {
    clear: both;
  }
} 

// ----------------------------------------------------------------------------------------------------
// 반응형 웹디자인
// usage : @include 
// ----------------------------------------------------------------------------------------------------
@mixin breakpoint($property, $point) {
    @media ($property: $point)  { @content; }
}

@mixin breakpoint-max($point) {
  @if $point == large {
    @media (max-width: 64.375em) { @content; }
  }
  @else if $point == medium {
    @media (max-width: 50em) { @content; }
  }
  @else if $point == small {
    @media (max-width: 37.5em)  { @content; }
  }
  @else {
    @media (max-width: $point)  { @content; }
  }
}

// ----------------------------------------------------------------------------------------------------
// 레티나 대응 (2x 이미지 넣기)
// usage : @include image-2x("logo2x.png", 100px, 25px);
// ----------------------------------------------------------------------------------------------------
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

// ----------------------------------------------------------------------------------------------------
// box-sizing
// usage : @include box-sizing(border-box);
// ----------------------------------------------------------------------------------------------------
@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

// ----------------------------------------------------------------------------------------------------
// absolute 포지션
// usage : @include abs-pos(10px, 10px, 5px, 15px , $test : 1);
// ----------------------------------------------------------------------------------------------------
@mixin abs-pos ($top: null, $right: null, $bottom: null, $left: null, $test : 1) {
  @if $test == 0{
    background-color:#000;
  }
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

// ----------------------------------------------------------------------------------------------------
// 중앙정렬 (if not absolute)
// usage : @include center-block;
// ----------------------------------------------------------------------------------------------------
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// ----------------------------------------------------------------------------------------------------
// 사이즈 지정
// usage : @include size(가로,세로);
// ----------------------------------------------------------------------------------------------------

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// ----------------------------------------------------------------------------------------------------
// 투명배경 
// ----------------------------------------------------------------------------------------------------
@mixin transparent{
  background:transparent;
  border:0;
}

// ----------------------------------------------------------------------------------------------------
// placeholder 색상
// ----------------------------------------------------------------------------------------------------
@mixin placeholder-color($color){
  ::-webkit-input-placeholder { /* WebKit browsers */
    color: $color;
  }
  :-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color: $color;
  }
  ::-moz-placeholder { /* Mozilla Firefox 19+ */
    color: $color;
  }
  :-ms-input-placeholder { /* Internet Explorer 10+ */
    color: $color;
  }
}

// ----------------------------------------------------------------------------------------------------
// transform
// ----------------------------------------------------------------------------------------------------
@mixin transform($property){
  -webkit-transform:$property;
  -moz-transform:$property;
  -ms-transform:$property;
  transform:$property;
}
// ----------------------------------------------------------------------------------------------------
// transition
// ----------------------------------------------------------------------------------------------------
@mixin transition($type, $time, $ease){
  -webkit-transition:$type $time $ease;
  -moz-transition:$type $time $ease;
  -ms-transition:$type $time $ease;
  transition:$type $time $ease;
}


// ----------------------------------------------------------------------------------------------------
// 게임 랜딩페이지 배경 설정
// ----------------------------------------------------------------------------------------------------
@mixin setPage($src, $height, $bg-color : #000){
  position:relative;
  margin-left:auto;
  margin-right:auto;
  background:$bg-color url(#{$src}) no-repeat center;
  height:$height;
}

// ----------------------------------------------------------------------------------------------------
// Convert to REM
// ----------------------------------------------------------------------------------------------------
@mixin rem-fallback($property, $px-values) {
  // Convert the baseline into rems
  $baseline-rem: $root-em / 1rem;
  // Print the first line in pixel values
  #{$property}: $px-values;
  // If there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $baseline-rem; 
  }@else {
    // Create an empty list that we can dump values into
    $rem-values: unquote("");
    @each $value in $px-values {
      // If the value is zero, return 0
      @if $value == 0 {
        $rem-values: append($rem-values, $value); 
      } @else {
        $rem-values: append($rem-values, $value / $baseline-rem); 
      } 
    }
    // Return the property and its list of converted values
    #{$property}: $rem-values; 
  } 
}

// ----------------------------------------------------------------------------------------------------
// 여백 제거 및 ul, ol 초기화 
// ----------------------------------------------------------------------------------------------------
@mixin no-margin($type: null){
  margin:0;
  padding:0;
  @if $type == 'list'{
    list-style:none;
  }
}